//
// \file: dissectPackets.c
// 
// Reads in a binary file containing packets and reads them 
// in byte by byte. Reads each packet in and chops it into
// its individual components for formatted printing.
// 
// @author: Jacob R Hooker - jrh7130
//
// /// // /// // /// // /// // /// // /// // /// // /// // /// // ///

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <byteswap.h>

size_t BUFFER_SIZE = 2048;
FILE *file;

//
// \fn main
// \brief The main function
//
// Reads and dissects a binary file of packets
//
//
int main(int argc, char **argv){
	unsigned char buffer[BUFFER_SIZE];
		
	if(argc <= 1 || argc > 2){
		printf("Usage: dissectPackets <binary file>\n");
		exit(EXIT_FAILURE);
	}
	//number of packets in file
	int numPackets;
	
	//the binary file being read
	file = fopen(argv[1], "rb");
	
	//fails if no file found
	if(file == NULL || 0){
		fprintf(stderr, 
		"Failed to open input file: No such file or directory.");	
		return 1;
	}

	fread(&numPackets, sizeof(int), 1, file);
	
	//fails if file has no packets
	printf("%d",numPackets)'
	fclose(file);

	return 0;
}
